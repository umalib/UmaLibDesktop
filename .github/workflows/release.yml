# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: umalib-build-and-release

on:
  push:
    tags:
      - "v*"

jobs:
  build-on-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        node-version: [ 13.x ]
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Manually install dependencies
        run: npm install electron-builder@22.10.5
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Uma Library Desktop ${{ github.ref_name }}
          body: built by Github Actions
          draft: false
          prerelease: false
          files: ./dist_electron/umalib-win64-${{ github.ref_name }}.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-on-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTHON_PATH: /usr/local/bin/python
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Uma Library Desktop ${{ github.ref_name }}
          files: ./dist_electron/umalib-mac-${{ github.ref_name }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}